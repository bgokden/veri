// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: veriservice.proto

package veriservice

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Request message for creating a new customer
type SearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *SearchConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	Datum  *Datum        `protobuf:"bytes,2,opt,name=datum,proto3" json:"datum,omitempty"`
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_veriservice_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_veriservice_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_veriservice_proto_rawDescGZIP(), []int{0}
}

func (x *SearchRequest) GetConfig() *SearchConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *SearchRequest) GetDatum() *Datum {
	if x != nil {
		return x.Datum
	}
	return nil
}

type SearchConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScoreFuncName  string `protobuf:"bytes,1,opt,name=scoreFuncName,proto3" json:"scoreFuncName,omitempty"`
	HigherIsBetter bool   `protobuf:"varint,2,opt,name=higherIsBetter,proto3" json:"higherIsBetter,omitempty"`
	Timestamp      int64  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Timeout        uint64 `protobuf:"varint,4,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Limit          uint32 `protobuf:"varint,5,opt,name=Limit,proto3" json:"Limit,omitempty"`
	CacheDuration  uint64 `protobuf:"varint,6,opt,name=cacheDuration,proto3" json:"cacheDuration,omitempty"`
	DataName       string `protobuf:"bytes,7,opt,name=dataName,proto3" json:"dataName,omitempty"`
}

func (x *SearchConfig) Reset() {
	*x = SearchConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_veriservice_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchConfig) ProtoMessage() {}

func (x *SearchConfig) ProtoReflect() protoreflect.Message {
	mi := &file_veriservice_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchConfig.ProtoReflect.Descriptor instead.
func (*SearchConfig) Descriptor() ([]byte, []int) {
	return file_veriservice_proto_rawDescGZIP(), []int{1}
}

func (x *SearchConfig) GetScoreFuncName() string {
	if x != nil {
		return x.ScoreFuncName
	}
	return ""
}

func (x *SearchConfig) GetHigherIsBetter() bool {
	if x != nil {
		return x.HigherIsBetter
	}
	return false
}

func (x *SearchConfig) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *SearchConfig) GetTimeout() uint64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *SearchConfig) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchConfig) GetCacheDuration() uint64 {
	if x != nil {
		return x.CacheDuration
	}
	return 0
}

func (x *SearchConfig) GetDataName() string {
	if x != nil {
		return x.DataName
	}
	return ""
}

type GetDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetDataRequest) Reset() {
	*x = GetDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_veriservice_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataRequest) ProtoMessage() {}

func (x *GetDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_veriservice_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataRequest.ProtoReflect.Descriptor instead.
func (*GetDataRequest) Descriptor() ([]byte, []int) {
	return file_veriservice_proto_rawDescGZIP(), []int{2}
}

func (x *GetDataRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Datum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Feature    []float64 `protobuf:"fixed64,1,rep,packed,name=feature,proto3" json:"feature,omitempty"`
	Version    int64     `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Label      []byte    `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
	GroupLabel []byte    `protobuf:"bytes,4,opt,name=groupLabel,proto3" json:"groupLabel,omitempty"`
	Size1      uint32    `protobuf:"varint,5,opt,name=size1,proto3" json:"size1,omitempty"`
	Size2      uint32    `protobuf:"varint,6,opt,name=size2,proto3" json:"size2,omitempty"`
	Dim1       uint32    `protobuf:"varint,7,opt,name=dim1,proto3" json:"dim1,omitempty"`
	Dim2       uint32    `protobuf:"varint,8,opt,name=dim2,proto3" json:"dim2,omitempty"`
}

func (x *Datum) Reset() {
	*x = Datum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_veriservice_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Datum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Datum) ProtoMessage() {}

func (x *Datum) ProtoReflect() protoreflect.Message {
	mi := &file_veriservice_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Datum.ProtoReflect.Descriptor instead.
func (*Datum) Descriptor() ([]byte, []int) {
	return file_veriservice_proto_rawDescGZIP(), []int{3}
}

func (x *Datum) GetFeature() []float64 {
	if x != nil {
		return x.Feature
	}
	return nil
}

func (x *Datum) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Datum) GetLabel() []byte {
	if x != nil {
		return x.Label
	}
	return nil
}

func (x *Datum) GetGroupLabel() []byte {
	if x != nil {
		return x.GroupLabel
	}
	return nil
}

func (x *Datum) GetSize1() uint32 {
	if x != nil {
		return x.Size1
	}
	return 0
}

func (x *Datum) GetSize2() uint32 {
	if x != nil {
		return x.Size2
	}
	return 0
}

func (x *Datum) GetDim1() uint32 {
	if x != nil {
		return x.Dim1
	}
	return 0
}

func (x *Datum) GetDim2() uint32 {
	if x != nil {
		return x.Dim2
	}
	return 0
}

type ScoredDatum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Score float64 `protobuf:"fixed64,1,opt,name=score,proto3" json:"score,omitempty"`
	Datum *Datum  `protobuf:"bytes,2,opt,name=datum,proto3" json:"datum,omitempty"`
}

func (x *ScoredDatum) Reset() {
	*x = ScoredDatum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_veriservice_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScoredDatum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoredDatum) ProtoMessage() {}

func (x *ScoredDatum) ProtoReflect() protoreflect.Message {
	mi := &file_veriservice_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoredDatum.ProtoReflect.Descriptor instead.
func (*ScoredDatum) Descriptor() ([]byte, []int) {
	return file_veriservice_proto_rawDescGZIP(), []int{4}
}

func (x *ScoredDatum) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *ScoredDatum) GetDatum() *Datum {
	if x != nil {
		return x.Datum
	}
	return nil
}

type SearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*ScoredDatum `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *SearchResponse) Reset() {
	*x = SearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_veriservice_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse) ProtoMessage() {}

func (x *SearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_veriservice_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse.ProtoReflect.Descriptor instead.
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return file_veriservice_proto_rawDescGZIP(), []int{5}
}

func (x *SearchResponse) GetResult() []*ScoredDatum {
	if x != nil {
		return x.Result
	}
	return nil
}

type InsertionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config   *InsertConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	Datum    *Datum        `protobuf:"bytes,2,opt,name=datum,proto3" json:"datum,omitempty"`
	DataName string        `protobuf:"bytes,3,opt,name=dataName,proto3" json:"dataName,omitempty"`
}

func (x *InsertionRequest) Reset() {
	*x = InsertionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_veriservice_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertionRequest) ProtoMessage() {}

func (x *InsertionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_veriservice_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertionRequest.ProtoReflect.Descriptor instead.
func (*InsertionRequest) Descriptor() ([]byte, []int) {
	return file_veriservice_proto_rawDescGZIP(), []int{6}
}

func (x *InsertionRequest) GetConfig() *InsertConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *InsertionRequest) GetDatum() *Datum {
	if x != nil {
		return x.Datum
	}
	return nil
}

func (x *InsertionRequest) GetDataName() string {
	if x != nil {
		return x.DataName
	}
	return ""
}

type InsertConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ttl uint64 `protobuf:"varint,1,opt,name=ttl,proto3" json:"ttl,omitempty"`
}

func (x *InsertConfig) Reset() {
	*x = InsertConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_veriservice_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertConfig) ProtoMessage() {}

func (x *InsertConfig) ProtoReflect() protoreflect.Message {
	mi := &file_veriservice_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertConfig.ProtoReflect.Descriptor instead.
func (*InsertConfig) Descriptor() ([]byte, []int) {
	return file_veriservice_proto_rawDescGZIP(), []int{7}
}

func (x *InsertConfig) GetTtl() uint64 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

type InsertionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *InsertionResponse) Reset() {
	*x = InsertionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_veriservice_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertionResponse) ProtoMessage() {}

func (x *InsertionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_veriservice_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertionResponse.ProtoReflect.Descriptor instead.
func (*InsertionResponse) Descriptor() ([]byte, []int) {
	return file_veriservice_proto_rawDescGZIP(), []int{8}
}

func (x *InsertionResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type ServiceMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Services []string `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty"`
}

func (x *ServiceMessage) Reset() {
	*x = ServiceMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_veriservice_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceMessage) ProtoMessage() {}

func (x *ServiceMessage) ProtoReflect() protoreflect.Message {
	mi := &file_veriservice_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceMessage.ProtoReflect.Descriptor instead.
func (*ServiceMessage) Descriptor() ([]byte, []int) {
	return file_veriservice_proto_rawDescGZIP(), []int{9}
}

func (x *ServiceMessage) GetServices() []string {
	if x != nil {
		return x.Services
	}
	return nil
}

type DataInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Timestamp   uint64    `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Version     string    `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Avg         []float64 `protobuf:"fixed64,4,rep,packed,name=avg,proto3" json:"avg,omitempty"`
	Hist        []float64 `protobuf:"fixed64,5,rep,packed,name=hist,proto3" json:"hist,omitempty"`
	N           uint64    `protobuf:"varint,6,opt,name=n,proto3" json:"n,omitempty"`
	MaxDistance float64   `protobuf:"fixed64,7,opt,name=maxDistance,proto3" json:"maxDistance,omitempty"`
}

func (x *DataInfo) Reset() {
	*x = DataInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_veriservice_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataInfo) ProtoMessage() {}

func (x *DataInfo) ProtoReflect() protoreflect.Message {
	mi := &file_veriservice_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataInfo.ProtoReflect.Descriptor instead.
func (*DataInfo) Descriptor() ([]byte, []int) {
	return file_veriservice_proto_rawDescGZIP(), []int{10}
}

func (x *DataInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DataInfo) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *DataInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *DataInfo) GetAvg() []float64 {
	if x != nil {
		return x.Avg
	}
	return nil
}

func (x *DataInfo) GetHist() []float64 {
	if x != nil {
		return x.Hist
	}
	return nil
}

func (x *DataInfo) GetN() uint64 {
	if x != nil {
		return x.N
	}
	return 0
}

func (x *DataInfo) GetMaxDistance() float64 {
	if x != nil {
		return x.MaxDistance
	}
	return 0
}

type DataConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	TargetN uint64 `protobuf:"varint,3,opt,name=TargetN,proto3" json:"TargetN,omitempty"`
}

func (x *DataConfig) Reset() {
	*x = DataConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_veriservice_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataConfig) ProtoMessage() {}

func (x *DataConfig) ProtoReflect() protoreflect.Message {
	mi := &file_veriservice_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataConfig.ProtoReflect.Descriptor instead.
func (*DataConfig) Descriptor() ([]byte, []int) {
	return file_veriservice_proto_rawDescGZIP(), []int{11}
}

func (x *DataConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DataConfig) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *DataConfig) GetTargetN() uint64 {
	if x != nil {
		return x.TargetN
	}
	return 0
}

type Peer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addresses []string      `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
	Version   string        `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Timestamp uint64        `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Data      []*DataConfig `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	Services  []string      `protobuf:"bytes,5,rep,name=services,proto3" json:"services,omitempty"`
	Peers     []*Peer       `protobuf:"bytes,6,rep,name=peers,proto3" json:"peers,omitempty"`
}

func (x *Peer) Reset() {
	*x = Peer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_veriservice_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Peer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Peer) ProtoMessage() {}

func (x *Peer) ProtoReflect() protoreflect.Message {
	mi := &file_veriservice_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Peer.ProtoReflect.Descriptor instead.
func (*Peer) Descriptor() ([]byte, []int) {
	return file_veriservice_proto_rawDescGZIP(), []int{12}
}

func (x *Peer) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *Peer) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Peer) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Peer) GetData() []*DataConfig {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Peer) GetServices() []string {
	if x != nil {
		return x.Services
	}
	return nil
}

func (x *Peer) GetPeers() []*Peer {
	if x != nil {
		return x.Peers
	}
	return nil
}

type JoinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer *Peer `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`
}

func (x *JoinRequest) Reset() {
	*x = JoinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_veriservice_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRequest) ProtoMessage() {}

func (x *JoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_veriservice_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRequest.ProtoReflect.Descriptor instead.
func (*JoinRequest) Descriptor() ([]byte, []int) {
	return file_veriservice_proto_rawDescGZIP(), []int{13}
}

func (x *JoinRequest) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

type JoinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"` // received address
}

func (x *JoinResponse) Reset() {
	*x = JoinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_veriservice_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinResponse) ProtoMessage() {}

func (x *JoinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_veriservice_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinResponse.ProtoReflect.Descriptor instead.
func (*JoinResponse) Descriptor() ([]byte, []int) {
	return file_veriservice_proto_rawDescGZIP(), []int{14}
}

func (x *JoinResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

var File_veriservice_proto protoreflect.FileDescriptor

var file_veriservice_proto_rawDesc = []byte{
	0x0a, 0x11, 0x76, 0x65, 0x72, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x76, 0x65, 0x72, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x22, 0x6c, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x31, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x28, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x44, 0x61, 0x74, 0x75, 0x6d, 0x52, 0x05, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x22, 0xec,
	0x01, 0x0a, 0x0c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x24, 0x0a, 0x0d, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x46, 0x75, 0x6e,
	0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x68, 0x69, 0x67, 0x68, 0x65, 0x72, 0x49,
	0x73, 0x42, 0x65, 0x74, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x68,
	0x69, 0x67, 0x68, 0x65, 0x72, 0x49, 0x73, 0x42, 0x65, 0x74, 0x74, 0x65, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x74,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0d, 0x63, 0x61, 0x63, 0x68, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x24, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0xc5, 0x01, 0x0a, 0x05, 0x44, 0x61, 0x74, 0x75, 0x6d, 0x12, 0x18, 0x0a,
	0x07, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x01, 0x52, 0x07,
	0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x69, 0x7a, 0x65, 0x31,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x69, 0x7a, 0x65, 0x31, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x69, 0x7a, 0x65, 0x32, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x69,
	0x7a, 0x65, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x69, 0x6d, 0x31, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x64, 0x69, 0x6d, 0x31, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x69, 0x6d, 0x32, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x64, 0x69, 0x6d, 0x32, 0x22, 0x4d, 0x0a, 0x0b, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x64, 0x44, 0x61, 0x74, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x12, 0x28, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x61,
	0x74, 0x75, 0x6d, 0x52, 0x05, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x22, 0x42, 0x0a, 0x0e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x76,
	0x65, 0x72, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x64, 0x44, 0x61, 0x74, 0x75, 0x6d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x8b,
	0x01, 0x0a, 0x10, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x28, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x75, 0x6d, 0x52, 0x05, 0x64, 0x61, 0x74, 0x75, 0x6d,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x20, 0x0a, 0x0c,
	0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x10, 0x0a, 0x03,
	0x74, 0x74, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x22, 0x27,
	0x0a, 0x11, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x2c, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0xac, 0x01, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x76, 0x67, 0x18, 0x04, 0x20, 0x03, 0x28, 0x01, 0x52, 0x03, 0x61, 0x76, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x01, 0x52, 0x04,
	0x68, 0x69, 0x73, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x01, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x44, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x22, 0x54, 0x0a, 0x0a, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x22, 0xce, 0x01, 0x0a, 0x04, 0x50,
	0x65, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x12, 0x27, 0x0a, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x50, 0x65, 0x65, 0x72, 0x52, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x22, 0x34, 0x0a, 0x0b, 0x4a,
	0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x70, 0x65,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x70, 0x65, 0x65,
	0x72, 0x22, 0x28, 0x0a, 0x0c, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0x83, 0x04, 0x0a, 0x0b,
	0x56, 0x65, 0x72, 0x69, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x06, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x1a, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x49, 0x0a, 0x06, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x12, 0x1d, 0x2e, 0x76, 0x65, 0x72,
	0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x76, 0x65, 0x72, 0x69,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x04, 0x4a,
	0x6f, 0x69, 0x6e, 0x12, 0x18, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e,
	0x76, 0x65, 0x72, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4a, 0x6f, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0a, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x1b, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x75, 0x6d, 0x22, 0x00, 0x30, 0x01, 0x12, 0x43, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x2e, 0x76,
	0x65, 0x72, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x76, 0x65, 0x72, 0x69,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x00, 0x12, 0x48, 0x0a, 0x0c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x12, 0x1a, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18,
	0x2e, 0x76, 0x65, 0x72, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x64, 0x44, 0x61, 0x74, 0x75, 0x6d, 0x22, 0x00, 0x30, 0x01, 0x12, 0x53, 0x0a, 0x0c,
	0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x1d, 0x2e, 0x76,
	0x65, 0x72, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x76, 0x65,
	0x72, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30,
	0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_veriservice_proto_rawDescOnce sync.Once
	file_veriservice_proto_rawDescData = file_veriservice_proto_rawDesc
)

func file_veriservice_proto_rawDescGZIP() []byte {
	file_veriservice_proto_rawDescOnce.Do(func() {
		file_veriservice_proto_rawDescData = protoimpl.X.CompressGZIP(file_veriservice_proto_rawDescData)
	})
	return file_veriservice_proto_rawDescData
}

var file_veriservice_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_veriservice_proto_goTypes = []interface{}{
	(*SearchRequest)(nil),     // 0: veriservice.SearchRequest
	(*SearchConfig)(nil),      // 1: veriservice.SearchConfig
	(*GetDataRequest)(nil),    // 2: veriservice.GetDataRequest
	(*Datum)(nil),             // 3: veriservice.Datum
	(*ScoredDatum)(nil),       // 4: veriservice.ScoredDatum
	(*SearchResponse)(nil),    // 5: veriservice.SearchResponse
	(*InsertionRequest)(nil),  // 6: veriservice.InsertionRequest
	(*InsertConfig)(nil),      // 7: veriservice.InsertConfig
	(*InsertionResponse)(nil), // 8: veriservice.InsertionResponse
	(*ServiceMessage)(nil),    // 9: veriservice.ServiceMessage
	(*DataInfo)(nil),          // 10: veriservice.DataInfo
	(*DataConfig)(nil),        // 11: veriservice.DataConfig
	(*Peer)(nil),              // 12: veriservice.Peer
	(*JoinRequest)(nil),       // 13: veriservice.JoinRequest
	(*JoinResponse)(nil),      // 14: veriservice.JoinResponse
}
var file_veriservice_proto_depIdxs = []int32{
	1,  // 0: veriservice.SearchRequest.config:type_name -> veriservice.SearchConfig
	3,  // 1: veriservice.SearchRequest.datum:type_name -> veriservice.Datum
	3,  // 2: veriservice.ScoredDatum.datum:type_name -> veriservice.Datum
	4,  // 3: veriservice.SearchResponse.result:type_name -> veriservice.ScoredDatum
	7,  // 4: veriservice.InsertionRequest.config:type_name -> veriservice.InsertConfig
	3,  // 5: veriservice.InsertionRequest.datum:type_name -> veriservice.Datum
	11, // 6: veriservice.Peer.data:type_name -> veriservice.DataConfig
	12, // 7: veriservice.Peer.peers:type_name -> veriservice.Peer
	12, // 8: veriservice.JoinRequest.peer:type_name -> veriservice.Peer
	0,  // 9: veriservice.VeriService.Search:input_type -> veriservice.SearchRequest
	6,  // 10: veriservice.VeriService.Insert:input_type -> veriservice.InsertionRequest
	13, // 11: veriservice.VeriService.Join:input_type -> veriservice.JoinRequest
	2,  // 12: veriservice.VeriService.DataStream:input_type -> veriservice.GetDataRequest
	2,  // 13: veriservice.VeriService.GetDataInfo:input_type -> veriservice.GetDataRequest
	0,  // 14: veriservice.VeriService.SearchStream:input_type -> veriservice.SearchRequest
	6,  // 15: veriservice.VeriService.InsertStream:input_type -> veriservice.InsertionRequest
	5,  // 16: veriservice.VeriService.Search:output_type -> veriservice.SearchResponse
	8,  // 17: veriservice.VeriService.Insert:output_type -> veriservice.InsertionResponse
	14, // 18: veriservice.VeriService.Join:output_type -> veriservice.JoinResponse
	3,  // 19: veriservice.VeriService.DataStream:output_type -> veriservice.Datum
	10, // 20: veriservice.VeriService.GetDataInfo:output_type -> veriservice.DataInfo
	4,  // 21: veriservice.VeriService.SearchStream:output_type -> veriservice.ScoredDatum
	8,  // 22: veriservice.VeriService.InsertStream:output_type -> veriservice.InsertionResponse
	16, // [16:23] is the sub-list for method output_type
	9,  // [9:16] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_veriservice_proto_init() }
func file_veriservice_proto_init() {
	if File_veriservice_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_veriservice_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_veriservice_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_veriservice_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_veriservice_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Datum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_veriservice_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScoredDatum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_veriservice_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_veriservice_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_veriservice_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_veriservice_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_veriservice_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_veriservice_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_veriservice_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_veriservice_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Peer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_veriservice_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_veriservice_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_veriservice_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_veriservice_proto_goTypes,
		DependencyIndexes: file_veriservice_proto_depIdxs,
		MessageInfos:      file_veriservice_proto_msgTypes,
	}.Build()
	File_veriservice_proto = out.File
	file_veriservice_proto_rawDesc = nil
	file_veriservice_proto_goTypes = nil
	file_veriservice_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// VeriServiceClient is the client API for VeriService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VeriServiceClient interface {
	Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
	Insert(ctx context.Context, in *InsertionRequest, opts ...grpc.CallOption) (*InsertionResponse, error)
	Join(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (*JoinResponse, error)
	DataStream(ctx context.Context, in *GetDataRequest, opts ...grpc.CallOption) (VeriService_DataStreamClient, error)
	GetDataInfo(ctx context.Context, in *GetDataRequest, opts ...grpc.CallOption) (*DataInfo, error)
	SearchStream(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (VeriService_SearchStreamClient, error)
	InsertStream(ctx context.Context, opts ...grpc.CallOption) (VeriService_InsertStreamClient, error)
}

type veriServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewVeriServiceClient(cc grpc.ClientConnInterface) VeriServiceClient {
	return &veriServiceClient{cc}
}

func (c *veriServiceClient) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, "/veriservice.VeriService/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *veriServiceClient) Insert(ctx context.Context, in *InsertionRequest, opts ...grpc.CallOption) (*InsertionResponse, error) {
	out := new(InsertionResponse)
	err := c.cc.Invoke(ctx, "/veriservice.VeriService/Insert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *veriServiceClient) Join(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (*JoinResponse, error) {
	out := new(JoinResponse)
	err := c.cc.Invoke(ctx, "/veriservice.VeriService/Join", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *veriServiceClient) DataStream(ctx context.Context, in *GetDataRequest, opts ...grpc.CallOption) (VeriService_DataStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_VeriService_serviceDesc.Streams[0], "/veriservice.VeriService/DataStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &veriServiceDataStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type VeriService_DataStreamClient interface {
	Recv() (*Datum, error)
	grpc.ClientStream
}

type veriServiceDataStreamClient struct {
	grpc.ClientStream
}

func (x *veriServiceDataStreamClient) Recv() (*Datum, error) {
	m := new(Datum)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *veriServiceClient) GetDataInfo(ctx context.Context, in *GetDataRequest, opts ...grpc.CallOption) (*DataInfo, error) {
	out := new(DataInfo)
	err := c.cc.Invoke(ctx, "/veriservice.VeriService/GetDataInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *veriServiceClient) SearchStream(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (VeriService_SearchStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_VeriService_serviceDesc.Streams[1], "/veriservice.VeriService/SearchStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &veriServiceSearchStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type VeriService_SearchStreamClient interface {
	Recv() (*ScoredDatum, error)
	grpc.ClientStream
}

type veriServiceSearchStreamClient struct {
	grpc.ClientStream
}

func (x *veriServiceSearchStreamClient) Recv() (*ScoredDatum, error) {
	m := new(ScoredDatum)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *veriServiceClient) InsertStream(ctx context.Context, opts ...grpc.CallOption) (VeriService_InsertStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_VeriService_serviceDesc.Streams[2], "/veriservice.VeriService/InsertStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &veriServiceInsertStreamClient{stream}
	return x, nil
}

type VeriService_InsertStreamClient interface {
	Send(*InsertionRequest) error
	Recv() (*InsertionResponse, error)
	grpc.ClientStream
}

type veriServiceInsertStreamClient struct {
	grpc.ClientStream
}

func (x *veriServiceInsertStreamClient) Send(m *InsertionRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *veriServiceInsertStreamClient) Recv() (*InsertionResponse, error) {
	m := new(InsertionResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// VeriServiceServer is the server API for VeriService service.
type VeriServiceServer interface {
	Search(context.Context, *SearchRequest) (*SearchResponse, error)
	Insert(context.Context, *InsertionRequest) (*InsertionResponse, error)
	Join(context.Context, *JoinRequest) (*JoinResponse, error)
	DataStream(*GetDataRequest, VeriService_DataStreamServer) error
	GetDataInfo(context.Context, *GetDataRequest) (*DataInfo, error)
	SearchStream(*SearchRequest, VeriService_SearchStreamServer) error
	InsertStream(VeriService_InsertStreamServer) error
}

// UnimplementedVeriServiceServer can be embedded to have forward compatible implementations.
type UnimplementedVeriServiceServer struct {
}

func (*UnimplementedVeriServiceServer) Search(context.Context, *SearchRequest) (*SearchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Search not implemented")
}
func (*UnimplementedVeriServiceServer) Insert(context.Context, *InsertionRequest) (*InsertionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Insert not implemented")
}
func (*UnimplementedVeriServiceServer) Join(context.Context, *JoinRequest) (*JoinResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Join not implemented")
}
func (*UnimplementedVeriServiceServer) DataStream(*GetDataRequest, VeriService_DataStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method DataStream not implemented")
}
func (*UnimplementedVeriServiceServer) GetDataInfo(context.Context, *GetDataRequest) (*DataInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDataInfo not implemented")
}
func (*UnimplementedVeriServiceServer) SearchStream(*SearchRequest, VeriService_SearchStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method SearchStream not implemented")
}
func (*UnimplementedVeriServiceServer) InsertStream(VeriService_InsertStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method InsertStream not implemented")
}

func RegisterVeriServiceServer(s *grpc.Server, srv VeriServiceServer) {
	s.RegisterService(&_VeriService_serviceDesc, srv)
}

func _VeriService_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VeriServiceServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/veriservice.VeriService/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VeriServiceServer).Search(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VeriService_Insert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InsertionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VeriServiceServer).Insert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/veriservice.VeriService/Insert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VeriServiceServer).Insert(ctx, req.(*InsertionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VeriService_Join_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VeriServiceServer).Join(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/veriservice.VeriService/Join",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VeriServiceServer).Join(ctx, req.(*JoinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VeriService_DataStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetDataRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(VeriServiceServer).DataStream(m, &veriServiceDataStreamServer{stream})
}

type VeriService_DataStreamServer interface {
	Send(*Datum) error
	grpc.ServerStream
}

type veriServiceDataStreamServer struct {
	grpc.ServerStream
}

func (x *veriServiceDataStreamServer) Send(m *Datum) error {
	return x.ServerStream.SendMsg(m)
}

func _VeriService_GetDataInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VeriServiceServer).GetDataInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/veriservice.VeriService/GetDataInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VeriServiceServer).GetDataInfo(ctx, req.(*GetDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VeriService_SearchStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SearchRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(VeriServiceServer).SearchStream(m, &veriServiceSearchStreamServer{stream})
}

type VeriService_SearchStreamServer interface {
	Send(*ScoredDatum) error
	grpc.ServerStream
}

type veriServiceSearchStreamServer struct {
	grpc.ServerStream
}

func (x *veriServiceSearchStreamServer) Send(m *ScoredDatum) error {
	return x.ServerStream.SendMsg(m)
}

func _VeriService_InsertStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(VeriServiceServer).InsertStream(&veriServiceInsertStreamServer{stream})
}

type VeriService_InsertStreamServer interface {
	Send(*InsertionResponse) error
	Recv() (*InsertionRequest, error)
	grpc.ServerStream
}

type veriServiceInsertStreamServer struct {
	grpc.ServerStream
}

func (x *veriServiceInsertStreamServer) Send(m *InsertionResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *veriServiceInsertStreamServer) Recv() (*InsertionRequest, error) {
	m := new(InsertionRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _VeriService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "veriservice.VeriService",
	HandlerType: (*VeriServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Search",
			Handler:    _VeriService_Search_Handler,
		},
		{
			MethodName: "Insert",
			Handler:    _VeriService_Insert_Handler,
		},
		{
			MethodName: "Join",
			Handler:    _VeriService_Join_Handler,
		},
		{
			MethodName: "GetDataInfo",
			Handler:    _VeriService_GetDataInfo_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "DataStream",
			Handler:       _VeriService_DataStream_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SearchStream",
			Handler:       _VeriService_SearchStream_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "InsertStream",
			Handler:       _VeriService_InsertStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "veriservice.proto",
}
