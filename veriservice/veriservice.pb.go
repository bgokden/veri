// Code generated by protoc-gen-go. DO NOT EDIT.
// source: veriservice.proto

package veriservice

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Request message for creating a new customer
type KnnRequest struct {
	Id                   string    `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Timestamp            int64     `protobuf:"varint,2,opt,name=timestamp" json:"timestamp,omitempty"`
	Timeout              int64     `protobuf:"varint,3,opt,name=timeout" json:"timeout,omitempty"`
	K                    int32     `protobuf:"varint,4,opt,name=k" json:"k,omitempty"`
	Feature              []float64 `protobuf:"fixed64,5,rep,packed,name=feature" json:"feature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *KnnRequest) Reset()         { *m = KnnRequest{} }
func (m *KnnRequest) String() string { return proto.CompactTextString(m) }
func (*KnnRequest) ProtoMessage()    {}
func (*KnnRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_veriservice_5531172e5bf2f7e3, []int{0}
}
func (m *KnnRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KnnRequest.Unmarshal(m, b)
}
func (m *KnnRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KnnRequest.Marshal(b, m, deterministic)
}
func (dst *KnnRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KnnRequest.Merge(dst, src)
}
func (m *KnnRequest) XXX_Size() int {
	return xxx_messageInfo_KnnRequest.Size(m)
}
func (m *KnnRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_KnnRequest.DiscardUnknown(m)
}

var xxx_messageInfo_KnnRequest proto.InternalMessageInfo

func (m *KnnRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *KnnRequest) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *KnnRequest) GetTimeout() int64 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *KnnRequest) GetK() int32 {
	if m != nil {
		return m.K
	}
	return 0
}

func (m *KnnRequest) GetFeature() []float64 {
	if m != nil {
		return m.Feature
	}
	return nil
}

type GetLocalDataRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLocalDataRequest) Reset()         { *m = GetLocalDataRequest{} }
func (m *GetLocalDataRequest) String() string { return proto.CompactTextString(m) }
func (*GetLocalDataRequest) ProtoMessage()    {}
func (*GetLocalDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_veriservice_5531172e5bf2f7e3, []int{1}
}
func (m *GetLocalDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLocalDataRequest.Unmarshal(m, b)
}
func (m *GetLocalDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLocalDataRequest.Marshal(b, m, deterministic)
}
func (dst *GetLocalDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLocalDataRequest.Merge(dst, src)
}
func (m *GetLocalDataRequest) XXX_Size() int {
	return xxx_messageInfo_GetLocalDataRequest.Size(m)
}
func (m *GetLocalDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLocalDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLocalDataRequest proto.InternalMessageInfo

type Feature struct {
	Feature              []float64 `protobuf:"fixed64,1,rep,packed,name=feature" json:"feature,omitempty"`
	Timestamp            int64     `protobuf:"varint,2,opt,name=timestamp" json:"timestamp,omitempty"`
	Label                string    `protobuf:"bytes,3,opt,name=label" json:"label,omitempty"`
	Grouplabel           string    `protobuf:"bytes,4,opt,name=grouplabel" json:"grouplabel,omitempty"`
	Sequencelengthone    int64     `protobuf:"varint,5,opt,name=sequencelengthone" json:"sequencelengthone,omitempty"`
	Sequencelengthtwo    int64     `protobuf:"varint,6,opt,name=sequencelengthtwo" json:"sequencelengthtwo,omitempty"`
	Sequencedimone       int64     `protobuf:"varint,7,opt,name=sequencedimone" json:"sequencedimone,omitempty"`
	Sequencedimtwo       int64     `protobuf:"varint,8,opt,name=sequencedimtwo" json:"sequencedimtwo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Feature) Reset()         { *m = Feature{} }
func (m *Feature) String() string { return proto.CompactTextString(m) }
func (*Feature) ProtoMessage()    {}
func (*Feature) Descriptor() ([]byte, []int) {
	return fileDescriptor_veriservice_5531172e5bf2f7e3, []int{2}
}
func (m *Feature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Feature.Unmarshal(m, b)
}
func (m *Feature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Feature.Marshal(b, m, deterministic)
}
func (dst *Feature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Feature.Merge(dst, src)
}
func (m *Feature) XXX_Size() int {
	return xxx_messageInfo_Feature.Size(m)
}
func (m *Feature) XXX_DiscardUnknown() {
	xxx_messageInfo_Feature.DiscardUnknown(m)
}

var xxx_messageInfo_Feature proto.InternalMessageInfo

func (m *Feature) GetFeature() []float64 {
	if m != nil {
		return m.Feature
	}
	return nil
}

func (m *Feature) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Feature) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *Feature) GetGrouplabel() string {
	if m != nil {
		return m.Grouplabel
	}
	return ""
}

func (m *Feature) GetSequencelengthone() int64 {
	if m != nil {
		return m.Sequencelengthone
	}
	return 0
}

func (m *Feature) GetSequencelengthtwo() int64 {
	if m != nil {
		return m.Sequencelengthtwo
	}
	return 0
}

func (m *Feature) GetSequencedimone() int64 {
	if m != nil {
		return m.Sequencedimone
	}
	return 0
}

func (m *Feature) GetSequencedimtwo() int64 {
	if m != nil {
		return m.Sequencedimtwo
	}
	return 0
}

type KnnResponse struct {
	Id                   string     `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Features             []*Feature `protobuf:"bytes,2,rep,name=features" json:"features,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *KnnResponse) Reset()         { *m = KnnResponse{} }
func (m *KnnResponse) String() string { return proto.CompactTextString(m) }
func (*KnnResponse) ProtoMessage()    {}
func (*KnnResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_veriservice_5531172e5bf2f7e3, []int{3}
}
func (m *KnnResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KnnResponse.Unmarshal(m, b)
}
func (m *KnnResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KnnResponse.Marshal(b, m, deterministic)
}
func (dst *KnnResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KnnResponse.Merge(dst, src)
}
func (m *KnnResponse) XXX_Size() int {
	return xxx_messageInfo_KnnResponse.Size(m)
}
func (m *KnnResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_KnnResponse.DiscardUnknown(m)
}

var xxx_messageInfo_KnnResponse proto.InternalMessageInfo

func (m *KnnResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *KnnResponse) GetFeatures() []*Feature {
	if m != nil {
		return m.Features
	}
	return nil
}

type InsertionRequest struct {
	Timestamp            int64     `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	Label                string    `protobuf:"bytes,2,opt,name=label" json:"label,omitempty"`
	Grouplabel           string    `protobuf:"bytes,3,opt,name=grouplabel" json:"grouplabel,omitempty"`
	Feature              []float64 `protobuf:"fixed64,4,rep,packed,name=feature" json:"feature,omitempty"`
	Sequenceendingone    int64     `protobuf:"varint,5,opt,name=sequenceendingone" json:"sequenceendingone,omitempty"`
	Sequenceendingtwo    int64     `protobuf:"varint,6,opt,name=sequenceendingtwo" json:"sequenceendingtwo,omitempty"`
	Sequencedimone       int64     `protobuf:"varint,7,opt,name=sequencedimone" json:"sequencedimone,omitempty"`
	Sequencedimtwo       int64     `protobuf:"varint,8,opt,name=sequencedimtwo" json:"sequencedimtwo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *InsertionRequest) Reset()         { *m = InsertionRequest{} }
func (m *InsertionRequest) String() string { return proto.CompactTextString(m) }
func (*InsertionRequest) ProtoMessage()    {}
func (*InsertionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_veriservice_5531172e5bf2f7e3, []int{4}
}
func (m *InsertionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InsertionRequest.Unmarshal(m, b)
}
func (m *InsertionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InsertionRequest.Marshal(b, m, deterministic)
}
func (dst *InsertionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InsertionRequest.Merge(dst, src)
}
func (m *InsertionRequest) XXX_Size() int {
	return xxx_messageInfo_InsertionRequest.Size(m)
}
func (m *InsertionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InsertionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InsertionRequest proto.InternalMessageInfo

func (m *InsertionRequest) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *InsertionRequest) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *InsertionRequest) GetGrouplabel() string {
	if m != nil {
		return m.Grouplabel
	}
	return ""
}

func (m *InsertionRequest) GetFeature() []float64 {
	if m != nil {
		return m.Feature
	}
	return nil
}

func (m *InsertionRequest) GetSequenceendingone() int64 {
	if m != nil {
		return m.Sequenceendingone
	}
	return 0
}

func (m *InsertionRequest) GetSequenceendingtwo() int64 {
	if m != nil {
		return m.Sequenceendingtwo
	}
	return 0
}

func (m *InsertionRequest) GetSequencedimone() int64 {
	if m != nil {
		return m.Sequencedimone
	}
	return 0
}

func (m *InsertionRequest) GetSequencedimtwo() int64 {
	if m != nil {
		return m.Sequencedimtwo
	}
	return 0
}

type InsertionResponse struct {
	Code                 int32    `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InsertionResponse) Reset()         { *m = InsertionResponse{} }
func (m *InsertionResponse) String() string { return proto.CompactTextString(m) }
func (*InsertionResponse) ProtoMessage()    {}
func (*InsertionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_veriservice_5531172e5bf2f7e3, []int{5}
}
func (m *InsertionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InsertionResponse.Unmarshal(m, b)
}
func (m *InsertionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InsertionResponse.Marshal(b, m, deterministic)
}
func (dst *InsertionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InsertionResponse.Merge(dst, src)
}
func (m *InsertionResponse) XXX_Size() int {
	return xxx_messageInfo_InsertionResponse.Size(m)
}
func (m *InsertionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InsertionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InsertionResponse proto.InternalMessageInfo

func (m *InsertionResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

type ServiceMessage struct {
	Services             []string `protobuf:"bytes,1,rep,name=services" json:"services,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceMessage) Reset()         { *m = ServiceMessage{} }
func (m *ServiceMessage) String() string { return proto.CompactTextString(m) }
func (*ServiceMessage) ProtoMessage()    {}
func (*ServiceMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_veriservice_5531172e5bf2f7e3, []int{6}
}
func (m *ServiceMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceMessage.Unmarshal(m, b)
}
func (m *ServiceMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceMessage.Marshal(b, m, deterministic)
}
func (dst *ServiceMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceMessage.Merge(dst, src)
}
func (m *ServiceMessage) XXX_Size() int {
	return xxx_messageInfo_ServiceMessage.Size(m)
}
func (m *ServiceMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceMessage proto.InternalMessageInfo

func (m *ServiceMessage) GetServices() []string {
	if m != nil {
		return m.Services
	}
	return nil
}

type Peer struct {
	Address              string    `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	Timestamp            int64     `protobuf:"varint,2,opt,name=timestamp" json:"timestamp,omitempty"`
	Version              string    `protobuf:"bytes,3,opt,name=version" json:"version,omitempty"`
	Avg                  []float64 `protobuf:"fixed64,4,rep,packed,name=avg" json:"avg,omitempty"`
	Hist                 []float64 `protobuf:"fixed64,5,rep,packed,name=hist" json:"hist,omitempty"`
	N                    int64     `protobuf:"varint,6,opt,name=n" json:"n,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Peer) Reset()         { *m = Peer{} }
func (m *Peer) String() string { return proto.CompactTextString(m) }
func (*Peer) ProtoMessage()    {}
func (*Peer) Descriptor() ([]byte, []int) {
	return fileDescriptor_veriservice_5531172e5bf2f7e3, []int{7}
}
func (m *Peer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Peer.Unmarshal(m, b)
}
func (m *Peer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Peer.Marshal(b, m, deterministic)
}
func (dst *Peer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Peer.Merge(dst, src)
}
func (m *Peer) XXX_Size() int {
	return xxx_messageInfo_Peer.Size(m)
}
func (m *Peer) XXX_DiscardUnknown() {
	xxx_messageInfo_Peer.DiscardUnknown(m)
}

var xxx_messageInfo_Peer proto.InternalMessageInfo

func (m *Peer) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Peer) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Peer) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Peer) GetAvg() []float64 {
	if m != nil {
		return m.Avg
	}
	return nil
}

func (m *Peer) GetHist() []float64 {
	if m != nil {
		return m.Hist
	}
	return nil
}

func (m *Peer) GetN() int64 {
	if m != nil {
		return m.N
	}
	return 0
}

type PeerMessage struct {
	Peers                []*Peer  `protobuf:"bytes,1,rep,name=peers" json:"peers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeerMessage) Reset()         { *m = PeerMessage{} }
func (m *PeerMessage) String() string { return proto.CompactTextString(m) }
func (*PeerMessage) ProtoMessage()    {}
func (*PeerMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_veriservice_5531172e5bf2f7e3, []int{8}
}
func (m *PeerMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerMessage.Unmarshal(m, b)
}
func (m *PeerMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerMessage.Marshal(b, m, deterministic)
}
func (dst *PeerMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerMessage.Merge(dst, src)
}
func (m *PeerMessage) XXX_Size() int {
	return xxx_messageInfo_PeerMessage.Size(m)
}
func (m *PeerMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerMessage.DiscardUnknown(m)
}

var xxx_messageInfo_PeerMessage proto.InternalMessageInfo

func (m *PeerMessage) GetPeers() []*Peer {
	if m != nil {
		return m.Peers
	}
	return nil
}

type JoinRequest struct {
	Address              string    `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	Port                 int32     `protobuf:"varint,2,opt,name=port" json:"port,omitempty"`
	Avg                  []float64 `protobuf:"fixed64,3,rep,packed,name=avg" json:"avg,omitempty"`
	Version              string    `protobuf:"bytes,4,opt,name=version" json:"version,omitempty"`
	Hist                 []float64 `protobuf:"fixed64,5,rep,packed,name=hist" json:"hist,omitempty"`
	N                    int64     `protobuf:"varint,6,opt,name=n" json:"n,omitempty"`
	Timestamp            int64     `protobuf:"varint,7,opt,name=timestamp" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *JoinRequest) Reset()         { *m = JoinRequest{} }
func (m *JoinRequest) String() string { return proto.CompactTextString(m) }
func (*JoinRequest) ProtoMessage()    {}
func (*JoinRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_veriservice_5531172e5bf2f7e3, []int{9}
}
func (m *JoinRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinRequest.Unmarshal(m, b)
}
func (m *JoinRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinRequest.Marshal(b, m, deterministic)
}
func (dst *JoinRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinRequest.Merge(dst, src)
}
func (m *JoinRequest) XXX_Size() int {
	return xxx_messageInfo_JoinRequest.Size(m)
}
func (m *JoinRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JoinRequest proto.InternalMessageInfo

func (m *JoinRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *JoinRequest) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *JoinRequest) GetAvg() []float64 {
	if m != nil {
		return m.Avg
	}
	return nil
}

func (m *JoinRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *JoinRequest) GetHist() []float64 {
	if m != nil {
		return m.Hist
	}
	return nil
}

func (m *JoinRequest) GetN() int64 {
	if m != nil {
		return m.N
	}
	return 0
}

func (m *JoinRequest) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type JoinResponse struct {
	Address              string   `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinResponse) Reset()         { *m = JoinResponse{} }
func (m *JoinResponse) String() string { return proto.CompactTextString(m) }
func (*JoinResponse) ProtoMessage()    {}
func (*JoinResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_veriservice_5531172e5bf2f7e3, []int{10}
}
func (m *JoinResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinResponse.Unmarshal(m, b)
}
func (m *JoinResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinResponse.Marshal(b, m, deterministic)
}
func (dst *JoinResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinResponse.Merge(dst, src)
}
func (m *JoinResponse) XXX_Size() int {
	return xxx_messageInfo_JoinResponse.Size(m)
}
func (m *JoinResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinResponse.DiscardUnknown(m)
}

var xxx_messageInfo_JoinResponse proto.InternalMessageInfo

func (m *JoinResponse) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func init() {
	proto.RegisterType((*KnnRequest)(nil), "veriservice.KnnRequest")
	proto.RegisterType((*GetLocalDataRequest)(nil), "veriservice.GetLocalDataRequest")
	proto.RegisterType((*Feature)(nil), "veriservice.Feature")
	proto.RegisterType((*KnnResponse)(nil), "veriservice.KnnResponse")
	proto.RegisterType((*InsertionRequest)(nil), "veriservice.InsertionRequest")
	proto.RegisterType((*InsertionResponse)(nil), "veriservice.InsertionResponse")
	proto.RegisterType((*ServiceMessage)(nil), "veriservice.ServiceMessage")
	proto.RegisterType((*Peer)(nil), "veriservice.Peer")
	proto.RegisterType((*PeerMessage)(nil), "veriservice.PeerMessage")
	proto.RegisterType((*JoinRequest)(nil), "veriservice.JoinRequest")
	proto.RegisterType((*JoinResponse)(nil), "veriservice.JoinResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// VeriServiceClient is the client API for VeriService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VeriServiceClient interface {
	// Get all Customers with filter - A server-to-client streaming RPC.
	// rpc GetCustomers(CustomerFilter) returns (stream CustomerRequest) {}
	// Create a new Customer - A simple RPC
	GetKnn(ctx context.Context, in *KnnRequest, opts ...grpc.CallOption) (*KnnResponse, error)
	Insert(ctx context.Context, in *InsertionRequest, opts ...grpc.CallOption) (*InsertionResponse, error)
	Join(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (*JoinResponse, error)
	ExchangeServices(ctx context.Context, in *ServiceMessage, opts ...grpc.CallOption) (*ServiceMessage, error)
	ExchangePeers(ctx context.Context, in *PeerMessage, opts ...grpc.CallOption) (*PeerMessage, error)
	GetLocalData(ctx context.Context, in *GetLocalDataRequest, opts ...grpc.CallOption) (VeriService_GetLocalDataClient, error)
}

type veriServiceClient struct {
	cc *grpc.ClientConn
}

func NewVeriServiceClient(cc *grpc.ClientConn) VeriServiceClient {
	return &veriServiceClient{cc}
}

func (c *veriServiceClient) GetKnn(ctx context.Context, in *KnnRequest, opts ...grpc.CallOption) (*KnnResponse, error) {
	out := new(KnnResponse)
	err := c.cc.Invoke(ctx, "/veriservice.VeriService/GetKnn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *veriServiceClient) Insert(ctx context.Context, in *InsertionRequest, opts ...grpc.CallOption) (*InsertionResponse, error) {
	out := new(InsertionResponse)
	err := c.cc.Invoke(ctx, "/veriservice.VeriService/Insert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *veriServiceClient) Join(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (*JoinResponse, error) {
	out := new(JoinResponse)
	err := c.cc.Invoke(ctx, "/veriservice.VeriService/Join", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *veriServiceClient) ExchangeServices(ctx context.Context, in *ServiceMessage, opts ...grpc.CallOption) (*ServiceMessage, error) {
	out := new(ServiceMessage)
	err := c.cc.Invoke(ctx, "/veriservice.VeriService/ExchangeServices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *veriServiceClient) ExchangePeers(ctx context.Context, in *PeerMessage, opts ...grpc.CallOption) (*PeerMessage, error) {
	out := new(PeerMessage)
	err := c.cc.Invoke(ctx, "/veriservice.VeriService/ExchangePeers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *veriServiceClient) GetLocalData(ctx context.Context, in *GetLocalDataRequest, opts ...grpc.CallOption) (VeriService_GetLocalDataClient, error) {
	stream, err := c.cc.NewStream(ctx, &_VeriService_serviceDesc.Streams[0], "/veriservice.VeriService/GetLocalData", opts...)
	if err != nil {
		return nil, err
	}
	x := &veriServiceGetLocalDataClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type VeriService_GetLocalDataClient interface {
	Recv() (*Feature, error)
	grpc.ClientStream
}

type veriServiceGetLocalDataClient struct {
	grpc.ClientStream
}

func (x *veriServiceGetLocalDataClient) Recv() (*Feature, error) {
	m := new(Feature)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// VeriServiceServer is the server API for VeriService service.
type VeriServiceServer interface {
	// Get all Customers with filter - A server-to-client streaming RPC.
	// rpc GetCustomers(CustomerFilter) returns (stream CustomerRequest) {}
	// Create a new Customer - A simple RPC
	GetKnn(context.Context, *KnnRequest) (*KnnResponse, error)
	Insert(context.Context, *InsertionRequest) (*InsertionResponse, error)
	Join(context.Context, *JoinRequest) (*JoinResponse, error)
	ExchangeServices(context.Context, *ServiceMessage) (*ServiceMessage, error)
	ExchangePeers(context.Context, *PeerMessage) (*PeerMessage, error)
	GetLocalData(*GetLocalDataRequest, VeriService_GetLocalDataServer) error
}

func RegisterVeriServiceServer(s *grpc.Server, srv VeriServiceServer) {
	s.RegisterService(&_VeriService_serviceDesc, srv)
}

func _VeriService_GetKnn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KnnRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VeriServiceServer).GetKnn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/veriservice.VeriService/GetKnn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VeriServiceServer).GetKnn(ctx, req.(*KnnRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VeriService_Insert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InsertionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VeriServiceServer).Insert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/veriservice.VeriService/Insert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VeriServiceServer).Insert(ctx, req.(*InsertionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VeriService_Join_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VeriServiceServer).Join(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/veriservice.VeriService/Join",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VeriServiceServer).Join(ctx, req.(*JoinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VeriService_ExchangeServices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VeriServiceServer).ExchangeServices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/veriservice.VeriService/ExchangeServices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VeriServiceServer).ExchangeServices(ctx, req.(*ServiceMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _VeriService_ExchangePeers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PeerMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VeriServiceServer).ExchangePeers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/veriservice.VeriService/ExchangePeers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VeriServiceServer).ExchangePeers(ctx, req.(*PeerMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _VeriService_GetLocalData_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetLocalDataRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(VeriServiceServer).GetLocalData(m, &veriServiceGetLocalDataServer{stream})
}

type VeriService_GetLocalDataServer interface {
	Send(*Feature) error
	grpc.ServerStream
}

type veriServiceGetLocalDataServer struct {
	grpc.ServerStream
}

func (x *veriServiceGetLocalDataServer) Send(m *Feature) error {
	return x.ServerStream.SendMsg(m)
}

var _VeriService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "veriservice.VeriService",
	HandlerType: (*VeriServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetKnn",
			Handler:    _VeriService_GetKnn_Handler,
		},
		{
			MethodName: "Insert",
			Handler:    _VeriService_Insert_Handler,
		},
		{
			MethodName: "Join",
			Handler:    _VeriService_Join_Handler,
		},
		{
			MethodName: "ExchangeServices",
			Handler:    _VeriService_ExchangeServices_Handler,
		},
		{
			MethodName: "ExchangePeers",
			Handler:    _VeriService_ExchangePeers_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetLocalData",
			Handler:       _VeriService_GetLocalData_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "veriservice.proto",
}

func init() { proto.RegisterFile("veriservice.proto", fileDescriptor_veriservice_5531172e5bf2f7e3) }

var fileDescriptor_veriservice_5531172e5bf2f7e3 = []byte{
	// 647 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0xcd, 0x72, 0xd3, 0x30,
	0x10, 0x8e, 0x6c, 0x27, 0x69, 0xd6, 0xa5, 0xd3, 0x88, 0x32, 0x18, 0x03, 0x9d, 0x8c, 0x0e, 0x34,
	0x87, 0x4e, 0xa7, 0x53, 0x66, 0xb8, 0xf5, 0x46, 0xe9, 0xb4, 0xe5, 0x6f, 0xcc, 0x0c, 0x77, 0x37,
	0x5e, 0x52, 0x4f, 0x53, 0x29, 0x58, 0x4a, 0xca, 0x81, 0x47, 0xe0, 0x2d, 0x38, 0x70, 0xe1, 0x05,
	0x78, 0x3b, 0x46, 0xb6, 0xec, 0x5a, 0x71, 0x4c, 0x2f, 0xdc, 0xb4, 0xfa, 0x3e, 0xad, 0xbf, 0xfd,
	0x76, 0x65, 0xc1, 0x70, 0x89, 0x59, 0x2a, 0x31, 0x5b, 0xa6, 0x13, 0x3c, 0x98, 0x67, 0x42, 0x09,
	0xea, 0xd7, 0xb6, 0xd8, 0x77, 0x80, 0x0b, 0xce, 0x23, 0xfc, 0xba, 0x40, 0xa9, 0xe8, 0x16, 0x38,
	0x69, 0x12, 0x90, 0x11, 0x19, 0x0f, 0x22, 0x27, 0x4d, 0xe8, 0x33, 0x18, 0xa8, 0xf4, 0x06, 0xa5,
	0x8a, 0x6f, 0xe6, 0x81, 0x33, 0x22, 0x63, 0x37, 0xba, 0xdb, 0xa0, 0x01, 0xf4, 0x75, 0x20, 0x16,
	0x2a, 0x70, 0x73, 0xac, 0x0c, 0xe9, 0x26, 0x90, 0xeb, 0xc0, 0x1b, 0x91, 0x71, 0x37, 0x22, 0xd7,
	0x9a, 0xf7, 0x05, 0x63, 0xb5, 0xc8, 0x30, 0xe8, 0x8e, 0xdc, 0x31, 0x89, 0xca, 0x90, 0x3d, 0x82,
	0x87, 0xa7, 0xa8, 0xde, 0x8a, 0x49, 0x3c, 0x7b, 0x1d, 0xab, 0xd8, 0xc8, 0x60, 0x3f, 0x1d, 0xe8,
	0xbf, 0x29, 0x28, 0xf5, 0xc3, 0xc4, 0x3a, 0x7c, 0x8f, 0xb8, 0x1d, 0xe8, 0xce, 0xe2, 0x4b, 0x9c,
	0xe5, 0xd2, 0x06, 0x51, 0x11, 0xd0, 0x5d, 0x80, 0x69, 0x26, 0x16, 0xf3, 0x02, 0xf2, 0x72, 0xa8,
	0xb6, 0x43, 0xf7, 0x61, 0x28, 0xb5, 0x08, 0x3e, 0xc1, 0x19, 0xf2, 0xa9, 0xba, 0x12, 0x5c, 0x8b,
	0xd6, 0xb9, 0x9b, 0x40, 0x93, 0xad, 0x6e, 0x45, 0xd0, 0x5b, 0xc7, 0x56, 0xb7, 0x82, 0xbe, 0x80,
	0xad, 0x72, 0x33, 0x49, 0x6f, 0x74, 0xe2, 0x7e, 0x4e, 0x5d, 0xd9, 0x5d, 0xe1, 0xe9, 0x94, 0x1b,
	0x0d, 0x9e, 0xba, 0x15, 0xec, 0x03, 0xf8, 0x79, 0xeb, 0xe4, 0x5c, 0x70, 0x89, 0x8d, 0xde, 0x1d,
	0xc2, 0x86, 0x71, 0x4a, 0x06, 0xce, 0xc8, 0x1d, 0xfb, 0x47, 0x3b, 0x07, 0xf5, 0x61, 0x30, 0x06,
	0x47, 0x15, 0x8b, 0xfd, 0x76, 0x60, 0xfb, 0x8c, 0x4b, 0xcc, 0x54, 0x2a, 0xaa, 0x91, 0xb0, 0x5c,
	0x26, 0xad, 0x2e, 0x3b, 0xed, 0x2e, 0xbb, 0x0d, 0x97, 0x6b, 0x3d, 0xf5, 0xec, 0x9e, 0xd6, 0x1c,
	0x45, 0x9e, 0xa4, 0x7c, 0xba, 0xc6, 0xff, 0x0a, 0x68, 0xb2, 0xd7, 0xf8, 0x5f, 0x01, 0xff, 0xdd,
	0xff, 0x3d, 0x18, 0xd6, 0xdc, 0x32, 0x5d, 0xa0, 0xe0, 0x4d, 0x44, 0x82, 0xb9, 0x1f, 0xdd, 0x28,
	0x5f, 0xb3, 0x7d, 0xd8, 0xfa, 0x54, 0x98, 0xfe, 0x0e, 0xa5, 0x8c, 0xa7, 0x48, 0x43, 0xd8, 0x30,
	0x6d, 0x90, 0xf9, 0x54, 0x0f, 0xa2, 0x2a, 0x66, 0x3f, 0x08, 0x78, 0x1f, 0x11, 0x33, 0xed, 0x52,
	0x9c, 0x24, 0x19, 0x4a, 0x69, 0xba, 0x5a, 0x86, 0xf7, 0x5f, 0xcb, 0x25, 0x66, 0x32, 0x15, 0xdc,
	0x58, 0x5f, 0x86, 0x74, 0x1b, 0xdc, 0x78, 0x39, 0x35, 0x9e, 0xeb, 0xa5, 0x96, 0x7b, 0x95, 0x4a,
	0x65, 0xee, 0x65, 0xbe, 0xd6, 0x97, 0x97, 0x1b, 0x17, 0x09, 0x67, 0xaf, 0xc0, 0xd7, 0x6a, 0x4a,
	0xe5, 0x7b, 0xd0, 0x9d, 0x23, 0x66, 0x85, 0x6c, 0xff, 0x68, 0x68, 0x8d, 0x94, 0x26, 0x46, 0x05,
	0xce, 0x7e, 0x11, 0xf0, 0xcf, 0x45, 0x5a, 0xcd, 0x51, 0x7b, 0x35, 0x14, 0xbc, 0xb9, 0xc8, 0x54,
	0x69, 0x99, 0x5e, 0x97, 0x4a, 0xdd, 0x3b, 0xa5, 0xb5, 0xaa, 0x3c, 0xbb, 0xaa, 0x7b, 0x6b, 0xb0,
	0xfd, 0xea, 0xaf, 0xf8, 0xc5, 0xc6, 0xb0, 0x59, 0x08, 0x35, 0x2d, 0x6c, 0x55, 0x7a, 0xf4, 0xc7,
	0x05, 0xff, 0x33, 0x66, 0xa9, 0xe9, 0x26, 0x3d, 0x86, 0xde, 0x29, 0xaa, 0x0b, 0xce, 0xe9, 0x63,
	0xcb, 0x87, 0xbb, 0x3f, 0x6a, 0x18, 0x34, 0x81, 0xe2, 0x33, 0xac, 0x43, 0xcf, 0xa0, 0x57, 0x0c,
	0x10, 0x7d, 0x6e, 0xb1, 0x56, 0xef, 0x60, 0xb8, 0xdb, 0x06, 0x57, 0xa9, 0x8e, 0xc1, 0xd3, 0x35,
	0x50, 0xfb, 0x73, 0x35, 0xff, 0xc3, 0x27, 0x6b, 0x90, 0xea, 0xf8, 0x7b, 0xd8, 0x3e, 0xf9, 0x36,
	0xb9, 0x8a, 0xf9, 0x14, 0x4d, 0x6d, 0x92, 0x3e, 0xb5, 0x0e, 0xd8, 0x03, 0x1c, 0xfe, 0x0b, 0x64,
	0x1d, 0x7a, 0x02, 0x0f, 0xca, 0x7c, 0x7a, 0x26, 0xe4, 0x8a, 0xae, 0xda, 0x40, 0x85, 0xad, 0x08,
	0xeb, 0xd0, 0x73, 0xd8, 0xac, 0x3f, 0x0f, 0x74, 0x64, 0x71, 0xd7, 0xbc, 0x1c, 0xe1, 0xda, 0x5f,
	0x1c, 0xeb, 0x1c, 0x92, 0xcb, 0x5e, 0xfe, 0xf8, 0xbd, 0xfc, 0x1b, 0x00, 0x00, 0xff, 0xff, 0xf8,
	0xf2, 0x4c, 0x00, 0x11, 0x07, 0x00, 0x00,
}
